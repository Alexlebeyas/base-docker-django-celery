files:
  /opt/elasticbeanstalk/hooks/appdeploy/post/run_supervised_celeryd.sh: 
    content: |-
        #!/usr/bin/env bash
        
        # Get django environment variables
        celeryenv=`cat /opt/python/current/env | tr '\n' ',' | sed 's/export //g' | sed 's/$PATH/%(ENV_PATH)s/g' | sed 's/$PYTHONPATH//g' | sed 's/$LD_LIBRARY_PATH//g'`
        celeryenv=${celeryenv%?}
        
        # Create celery configuration script
        celeryconf="[program:celery_worker]
        ; Set full path to celery program if using virtualenv
        command=/opt/python/run/venv/bin/celery worker -A [DEFINE_APP_FOLDER_HERE] --loglevel=INFO
        
        directory=/opt/python/current/app
        user=wsgi
        numprocs=1
        stdout_logfile=/var/log/celery-worker.log
        stderr_logfile=/var/log/celery-worker.log
        autostart=true
        autorestart=true
        startsecs=10
        
        ; Need to wait for currently executing tasks to finish at shutdown.
        ; Increase this if you have very long running tasks.
        stopwaitsecs = 600
        
        ; When resorting to send SIGKILL to the program to terminate it
        ; send SIGKILL to its whole process group instead,
        ; taking care of its children as well.
        killasgroup=true
        
        ; if rabbitmq is supervised, set its priority higher
        ; so it starts first
        priority=998"

        celerybeatconf="[program:celery_beat]
        ; Set full path to celery program if using virtualenv
        command=/opt/python/run/venv/bin/celery beat -A [DEFINE_APP_FOLDER_HERE] --loglevel=INFO

        ; remove the -A avtotest argument if you are not using an app instance

        directory=/opt/python/current/app
        user=wsgi
        numprocs=1
        stdout_logfile=/var/log/celery-beat.log
        stderr_logfile=/var/log/celery-beat.log
        autostart=true
        autorestart=true
        startsecs=10

        ; Need to wait for currently executing tasks to finish at shutdown.
        ; Increase this if you have very long running tasks.
        stopwaitsecs = 600

        ; When resorting to send SIGKILL to the program to terminate it
        ; send SIGKILL to its whole process group instead,
        ; taking care of its children as well.
        killasgroup=true

        ; if rabbitmq is supervised, set its priority higher
        ; so it starts first
        priority=999"

        # Create the celery supervisord conf script
        sudo bash -c "echo '$celeryconf' | tee /opt/python/etc/celery.conf"
        sudo bash -c "echo '$celerybeatconf' | tee /opt/python/etc/celerybeat.conf"

        # Add configuration script to supervisord conf (if not there already)
        if ! grep -Fxq "[include]" /opt/python/etc/supervisord.conf
            then
            echo "[include]" | tee -a /opt/python/etc/supervisord.conf
            echo "files: celery.conf celerybeat.conf" | tee -a /opt/python/etc/supervisord.conf
        fi

        # reload supervisord condif to get changes
        /usr/local/bin/supervisorctl -c /opt/python/etc/supervisord.conf reload

    group: root
    mode: "000755"
    owner: root
